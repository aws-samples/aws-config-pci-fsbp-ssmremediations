################################################################################
#
#   Conformance Pack:
#     Operational Best Practices for Amazon S3, with Remediation
#
#   See Parameters section for names and descriptions of required parameters.
#
################################################################################

Parameters:
  S3TargetBucketNameForEnableLogging:
    Description: The target s3 bucket where the logging should be enabled.
    Type: String
Resources:
  S3BucketPublicReadProhibited:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: S3BucketPublicReadProhibited
      Description: >-
        Checks that your Amazon S3 buckets do not allow public read access.
        The rule checks the Block Public Access settings, the bucket policy, and the
        bucket access control list (ACL).
      Scope:
        ComplianceResourceTypes:
        - "AWS::S3::Bucket"
      Source:
        Owner: AWS
        SourceIdentifier: S3_BUCKET_PUBLIC_READ_PROHIBITED
      MaximumExecutionFrequency: Six_Hours
  S3BucketPublicReadProhibitedRemediation:
    DependsOn: S3BucketPublicReadProhibited
    Type: 'AWS::Config::RemediationConfiguration'
    Properties:
      ConfigRuleName: S3BucketPublicReadProhibited
      ResourceType: "AWS::S3::Bucket"
      TargetId: "AWS-DisableS3BucketPublicReadWrite"
      TargetType: "SSM_DOCUMENT"
      TargetVersion: "1"
      Parameters:
        AutomationAssumeRole:
          StaticValue:
            Values:
              - arn:aws:iam::341476298946:role/automationassumerole-us-west-1
        S3BucketName:
          ResourceValue:
            Value: "RESOURCE_ID"
      ExecutionControls:
        SsmControls:
          ConcurrentExecutionRatePercentage: 10
          ErrorPercentage: 10
      Automatic: True
      MaximumAutomaticAttempts: 10
      RetryAttemptSeconds: 600
## IAM placeholders
  IAMUserPolicyDetach:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: IAMUserPolicyDetach
      Description: >-
        PCI.IAM.2 – IAM users should not have IAM Policies attached. Ensure IAM policies are attached only to groups or roles
      Scope:
        ComplianceResourceTypes:
        - "AWS::IAM::User"
      Source:
        Owner: AWS
        SourceIdentifier: IAM_USER_NO_POLICIES_CHECK
  IAMUserPolicyDetachRemediation:
    DependsOn: IAMUserPolicyDetach
    Type: 'AWS::Config::RemediationConfiguration'
    Properties:
      ConfigRuleName: IAMUserPolicyDetach
      TargetId: "Custom-IAMUserPolicyDetachCF"
      TargetType: "SSM_DOCUMENT"
      TargetVersion: "1"
      Parameters:
        AutomationAssumeRole:
          StaticValue:
            Values:
              - arn:aws:iam::341476298946:role/automationassumerole-us-west-1
        username:
          ResourceValue:
            Value: "RESOURCE_ID"
      ExecutionControls:
        SsmControls:
          ConcurrentExecutionRatePercentage: 10
          ErrorPercentage: 10
      Automatic: True
      MaximumAutomaticAttempts: 10
      RetryAttemptSeconds: 600

  IAMFullAdminPolicyDetach:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: IAMFullAdminPolicyDetach
      Description: >-
        PCI.IAM.3 – Ensure IAM policies that allow full administrative privileges are not created
      Scope:
        ComplianceResourceTypes:
        - "AWS::IAM::User"
      Source:
        Owner: AWS
        SourceIdentifier: IAM_POLICY_NO_STATEMENTS_WITH_ADMIN_ACCESS
  IAMFullAdminPolicyDetachRemediation:
    DependsOn: IAMFullAdminPolicyDetach
    Type: 'AWS::Config::RemediationConfiguration'
    Properties:
      ConfigRuleName: IAMFullAdminPolicyDetach
      TargetId: "Custom-IAMFullAdminPolicyDetachCF"
      TargetType: "SSM_DOCUMENT"
      TargetVersion: "1"
      Parameters:
        AutomationAssumeRole:
          StaticValue:
            Values:
              - arn:aws:iam::341476298946:role/automationassumerole-us-west-1
        accountid:
          StaticValue:
            Values:
              - !Ref 'AWS::AccountId'
        policyresourceid:
          ResourceValue:
            Value: "RESOURCE_ID"
      ExecutionControls:
        SsmControls:
          ConcurrentExecutionRatePercentage: 10
          ErrorPercentage: 10
      Automatic: True
      MaximumAutomaticAttempts: 10
      RetryAttemptSeconds: 600

  CodeBuildProjectEnvVariableCheck:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: CodeBuildProjectEnvVariableCheck
      Description: >-
        PCI.CodeBuild.2- CodeBuild project environment variables should not contain clear text credentials
      Scope:
        ComplianceResourceTypes:
        - "AWS::CodeBuild::Project"
      Source:
        Owner: AWS
        SourceIdentifier: CODEBUILD_PROJECT_ENVVAR_AWSCRED_CHECK
  CodeBuildProjectEnvVariableCheckRemediation:
    DependsOn: CodeBuildProjectEnvVariableCheck
    Type: 'AWS::Config::RemediationConfiguration'
    Properties:
      ConfigRuleName: CodeBuildProjectEnvVariableCheck
      ResourceType: "AWS::CodeBuild::Project"
      TargetId: "Custom-CodeBuildUpdateProject"
      TargetType: "SSM_DOCUMENT"
      TargetVersion: "1"
      Parameters:
        AutomationAssumeRole:
          StaticValue:
            Values:
              - arn:aws:iam::341476298946:role/automationassumerole-us-west-1
        projectName:
          ResourceValue:
            Value: "RESOURCE_ID"
      ExecutionControls:
        SsmControls:
          ConcurrentExecutionRatePercentage: 10
          ErrorPercentage: 10
      Automatic: True
      MaximumAutomaticAttempts: 10
      RetryAttemptSeconds: 600

  S3BucketPublicWriteProhibited:
    Type: "AWS::Config::ConfigRule"
    Properties:
      ConfigRuleName: S3BucketPublicWriteProhibited
      Description: "Checks that your Amazon S3 buckets do not allow public write access. The rule checks the Block Public Access settings, the bucket policy, and the bucket access control list (ACL)."
      Scope:
        ComplianceResourceTypes:
        - "AWS::S3::Bucket"
      Source:
        Owner: AWS
        SourceIdentifier: S3_BUCKET_PUBLIC_WRITE_PROHIBITED
      MaximumExecutionFrequency: Six_Hours
  S3BucketPublicWriteProhibitedRemediation:
    DependsOn: S3BucketPublicWriteProhibited
    Type: 'AWS::Config::RemediationConfiguration'
    Properties:
      ConfigRuleName: S3BucketPublicWriteProhibited
      ResourceType: "AWS::S3::Bucket"
      TargetId: "AWS-DisableS3BucketPublicReadWrite"
      TargetType: "SSM_DOCUMENT"
      TargetVersion: "1"
      Parameters:
        AutomationAssumeRole:
          StaticValue:
            Values:
              - arn:aws:iam::341476298946:role/automationassumerole-us-west-1
        S3BucketName:
          ResourceValue:
            Value: "RESOURCE_ID"
      ExecutionControls:
        SsmControls:
          ConcurrentExecutionRatePercentage: 10
          ErrorPercentage: 10
      Automatic: True
      MaximumAutomaticAttempts: 10
      RetryAttemptSeconds: 600

  S3BucketServerSideEncryptionEnabled:
    Type: "AWS::Config::ConfigRule"
    Properties:
      ConfigRuleName: S3BucketServerSideEncryptionEnabled
      Description: "Checks that your Amazon S3 bucket either has S3 default encryption enabled or that the S3 bucket policy explicitly denies put-object requests without server side encryption."
      Scope:
        ComplianceResourceTypes:
        - "AWS::S3::Bucket"
      Source:
        Owner: AWS
        SourceIdentifier: S3_BUCKET_SERVER_SIDE_ENCRYPTION_ENABLED
  S3BucketServerSideEncryptionEnabledRemediation:
    DependsOn: S3BucketServerSideEncryptionEnabled
    Type: 'AWS::Config::RemediationConfiguration'
    Properties:
      ConfigRuleName: S3BucketServerSideEncryptionEnabled
      ResourceType: "AWS::S3::Bucket"
      TargetId: "AWS-EnableS3BucketEncryption"
      TargetType: "SSM_DOCUMENT"
      TargetVersion: "1"
      Parameters:
        AutomationAssumeRole:
          StaticValue:
            Values:
              - arn:aws:iam::341476298946:role/automationassumerole-us-west-1
        BucketName:
          ResourceValue:
            Value: "RESOURCE_ID"
        SSEAlgorithm:
          StaticValue:
            Values:
              - "AES256"
      ExecutionControls:
        SsmControls:
          ConcurrentExecutionRatePercentage: 10
          ErrorPercentage: 10
      Automatic: True
      MaximumAutomaticAttempts: 10
      RetryAttemptSeconds: 600

  CloudTrailEncryptionEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: CloudTrailEncryptionEnabled
      Description: >-
        PCI.CloudTrail.1 – Ensure CloudTrail logs are encrypted at rest using AWS KMS CMKs
      Scope:
        ComplianceResourceTypes:
        - "AWS::CloudTrail::Trail"
      Source:
        Owner: AWS
        SourceIdentifier: CLOUD_TRAIL_ENCRYPTION_ENABLED
      MaximumExecutionFrequency: One_Hour
  CloudTrailEncryptionRemediation:
    DependsOn: CloudTrailEncryptionEnabled
    Type: 'AWS::Config::RemediationConfiguration'
    Properties:
      ConfigRuleName: CloudTrailEncryptionEnabled
      ResourceType: "AWS::CloudTrail::Trail"
      TargetId: "Custom-CloudTrailEncryptionCF"
      TargetType: "SSM_DOCUMENT"
      TargetVersion: "1"
      Parameters:
        AutomationAssumeRole:
          StaticValue:
            Values:
              - arn:aws:iam::341476298946:role/automationassumerole-us-west-1
        CloudTrailLogGroupArn:
          StaticValue:
            Values:
              - !ImportValue CloudTrailLogGroupArn
        CloudWatchRoleArn:
          StaticValue:
            Values:
              - !ImportValue CloudWatchRoleArn
        KMSKeyArn:
          StaticValue:
            Values:
              - !ImportValue KMSKeyArn
        TrailName:
          ResourceValue:
            Value: "RESOURCE_ID"
      ExecutionControls:
        SsmControls:
          ConcurrentExecutionRatePercentage: 10
          ErrorPercentage: 10
      Automatic: True
      MaximumAutomaticAttempts: 5
      RetryAttemptSeconds: 60

  AutoScalingELBHealthCheck:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: AutoScalingELBHealthCheck
      Description: >-
        [PCI.AutoScaling.1] Auto scaling groups associated with a load balancer should use health checks
      Scope:
        ComplianceResourceTypes:
        - "AWS::AutoScaling::AutoScalingGroup"
      Source:
        Owner: AWS
        SourceIdentifier: AUTOSCALING_GROUP_ELB_HEALTHCHECK_REQUIRED
  AutoScalingELBHealthCheckRemediation:
    DependsOn: AutoScalingELBHealthCheck
    Type: 'AWS::Config::RemediationConfiguration'
    Properties:
      ConfigRuleName: AutoScalingELBHealthCheck
      ResourceType: "AWS::AutoScaling::AutoScalingGroup"
      TargetId: "Custom-AutoScalingELBHealthCheck"
      TargetType: "SSM_DOCUMENT"
      TargetVersion: "1"
      Parameters:
        AutomationAssumeRole:
          StaticValue:
            Values:
              - arn:aws:iam::341476298946:role/automationassumerole-us-west-1
        ASGGroupArn:
          ResourceValue:
            Value: "RESOURCE_ID"
      ExecutionControls:
        SsmControls:
          ConcurrentExecutionRatePercentage: 10
          ErrorPercentage: 10
      Automatic: True
      MaximumAutomaticAttempts: 5
      RetryAttemptSeconds: 60

  CodeBuildProjectEnvVariableCheck:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: CodeBuildProjectEnvVariableCheck
      Description: >-
        [PCI.CodeBuild.2] CodeBuild project environment variables should not contain clear text credentials
      Scope:
        ComplianceResourceTypes:
        - "AWS::CodeBuild::Project"
      Source:
        Owner: AWS
        SourceIdentifier: CODEBUILD_PROJECT_ENVVAR_AWSCRED_CHECK
  CodeBuildProjectEnvVariableCheckRemediation:
    DependsOn: CodeBuildProjectEnvVariableCheck
    Type: 'AWS::Config::RemediationConfiguration'
    Properties:
      ConfigRuleName: CodeBuildProjectEnvVariableCheck
      ResourceType: "AWS::CodeBuild::Project"
      TargetId: "Custom-CodeBuildUpdateProject"
      TargetType: "SSM_DOCUMENT"
      TargetVersion: "1"
      Parameters:
        AutomationAssumeRole:
          StaticValue:
            Values:
              - arn:aws:iam::341476298946:role/automationassumerole-us-west-1
        projectName:
          ResourceValue:
            Value: "RESOURCE_ID"
      ExecutionControls:
        SsmControls:
          ConcurrentExecutionRatePercentage: 10
          ErrorPercentage: 10
      Automatic: True
      MaximumAutomaticAttempts: 5
      RetryAttemptSeconds: 60

  CMKBackingKeyRotation:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: cmk-backing-key-rotation-enabled
      Description: >-
        PCI.KMS.1 – Ensure rotation for customer created CMKs is enabled
      Scope:
        ComplianceResourceTypes:
        - "AWS::KMS::Key"
      Source:
        Owner: AWS
        SourceIdentifier: CMK_BACKING_KEY_ROTATION_ENABLED
      MaximumExecutionFrequency: One_Hour
  CMKBackingKeyRotationRemediation:
    DependsOn: CMKBackingKeyRotation
    Type: 'AWS::Config::RemediationConfiguration'
    Properties:
      ConfigRuleName: cmk-backing-key-rotation-enabled
      ResourceType: "AWS::KMS::Key"
      TargetId: "Custom-CMKBackingKeyRotationCF"
      TargetType: "SSM_DOCUMENT"
      TargetVersion: "1"
      Parameters:
        AutomationAssumeRole:
          StaticValue:
            Values:
              - arn:aws:iam::341476298946:role/automationassumerole-us-west-1
        KMSKeyArn:
          ResourceValue:
            Value: "RESOURCE_ID"
      ExecutionControls:
        SsmControls:
          ConcurrentExecutionRatePercentage: 10
          ErrorPercentage: 10
      Automatic: True
      MaximumAutomaticAttempts: 5
      RetryAttemptSeconds: 60

  ReleaseElasticIP:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: ReleaseElasticIP
      Description: >-
        [PCI.EC2.4] Unused EC2 EIPs should be removed
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::EIP"
      Source:
        Owner: AWS
        SourceIdentifier: EIP_ATTACHED
  ReleaseElasticIPRemediation:
    DependsOn: ReleaseElasticIP
    Type: 'AWS::Config::RemediationConfiguration'
    Properties:
      ConfigRuleName: ReleaseElasticIP
      ResourceType: "AWS::EC2::EIP"
      TargetId: "AWS-ReleaseElasticIP"
      TargetType: "SSM_DOCUMENT"
      TargetVersion: "1"
      Parameters:
        AutomationAssumeRole:
          StaticValue:
            Values:
              - arn:aws:iam::341476298946:role/automationassumerole-us-west-1
        AllocationId:
          ResourceValue:
            Value: "RESOURCE_ID"
      ExecutionControls:
        SsmControls:
          ConcurrentExecutionRatePercentage: 10
          ErrorPercentage: 10
      Automatic: True
      MaximumAutomaticAttempts: 5
      RetryAttemptSeconds: 60

  RedshiftNonPublicClusterEnabled:
    Type: "AWS::Config::ConfigRule"
    Properties:
      ConfigRuleName: RedshiftNonPublicClusterEnabled
      Description: "[PCI.Redshift.1] Amazon Redshift clusters should prohibit public access"
      Scope:
        ComplianceResourceTypes:
        - "AWS::Redshift::Cluster"
      Source:
        Owner: AWS
        SourceIdentifier: REDSHIFT_CLUSTER_PUBLIC_ACCESS_CHECK
  RedshiftNonPublicClusterRemediation:
    DependsOn: RedshiftNonPublicClusterEnabled
    Type: 'AWS::Config::RemediationConfiguration'
    Properties:
      ConfigRuleName: RedshiftNonPublicClusterEnabled
      ResourceType: "AWS::Redshift::Cluster"
      TargetId: "Custom-ModifyRedshiftCluster"
      TargetType: "SSM_DOCUMENT"
      TargetVersion: "1"
      Parameters:
        AutomationAssumeRole:
          StaticValue:
            Values:
              - arn:aws:iam::341476298946:role/automationassumerole-us-west-1
        clusterId:
          ResourceValue:
            Value: "RESOURCE_ID"
      ExecutionControls:
        SsmControls:
          ConcurrentExecutionRatePercentage: 10
          ErrorPercentage: 10
      Automatic: True
      MaximumAutomaticAttempts: 5
      RetryAttemptSeconds: 60


  RDSNonPublicInstanceEnabled:
    Type: "AWS::Config::ConfigRule"
    Properties:
      ConfigRuleName: RDSNonPublicInstanceEnabled
      Description: "[PCI.RDS.2] RDS instances should prohibit public access"
      Scope:
        ComplianceResourceTypes:
        - "AWS::RDS::DBInstance"
      Source:
        Owner: AWS
        SourceIdentifier: RDS_INSTANCE_PUBLIC_ACCESS_CHECK
  RDSNonPublicInstanceRemediation:
    DependsOn: RDSNonPublicInstanceEnabled
    Type: 'AWS::Config::RemediationConfiguration'
    Properties:
      ConfigRuleName: RDSNonPublicInstanceEnabled
      ResourceType: "AWS::RDS::DBInstance"
      TargetId: "Custom-ModifyRDSDBInstance"
      TargetType: "SSM_DOCUMENT"
      TargetVersion: "1"
      Parameters:
        AutomationAssumeRole:
          StaticValue:
            Values:
              - arn:aws:iam::341476298946:role/automationassumerole-us-west-1
        dbresourceid:
          ResourceValue:
            Value: "RESOURCE_ID"
      ExecutionControls:
        SsmControls:
          ConcurrentExecutionRatePercentage: 10
          ErrorPercentage: 10
      Automatic: True
      MaximumAutomaticAttempts: 5
      RetryAttemptSeconds: 60
  
  
  RDSNonPublicSnapshotEnabled:
    Type: "AWS::Config::ConfigRule"
    Properties:
      ConfigRuleName: RDSNonPublicSnapshotEnabled
      Description: "[PCI.RDS.1] RDS snapshots should prohibit public access"
      Scope:
        ComplianceResourceTypes:
        - "AWS::RDS::DBSnapshot"
      Source:
        Owner: AWS
        SourceIdentifier: RDS_SNAPSHOTS_PUBLIC_PROHIBITED
  RDSNonPublicSnapshotRemediation:
    DependsOn: RDSNonPublicSnapshotEnabled
    Type: 'AWS::Config::RemediationConfiguration'
    Properties:
      ConfigRuleName: RDSNonPublicSnapshotEnabled
      ResourceType: "AWS::RDS::DBSnapshot"
      TargetId: "Custom-ModifyRDSSnapshot"
      TargetType: "SSM_DOCUMENT"
      TargetVersion: "1"
      Parameters:
        AutomationAssumeRole:
          StaticValue:
            Values:
              - arn:aws:iam::341476298946:role/automationassumerole-us-west-1
        snapshotId:
          ResourceValue:
            Value: "RESOURCE_ID"
        snapshotType:
          StaticValue:
            Values:
              - "AwsRdsDBSnapshot"
      ExecutionControls:
        SsmControls:
          ConcurrentExecutionRatePercentage: 10
          ErrorPercentage: 10
      Automatic: True
      MaximumAutomaticAttempts: 5
      RetryAttemptSeconds: 60

  DeactivateRootIAMAccessKey:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: DeactivateRootIAMAccessKey
      Description: >-
        PCI.IAM.1 – Deactivate Root Account IAM Access Key
      Source:
        Owner: AWS
        SourceIdentifier: IAM_ROOT_ACCESS_KEY_CHECK
  DeactivateRootIAMAccessKeyRemediation:
    DependsOn: DeactivateRootIAMAccessKey
    Type: 'AWS::Config::RemediationConfiguration'
    Properties:
      ConfigRuleName: DeactivateRootIAMAccessKey
      TargetId: "Custom-DeactivateRootIAMAccessKeyCF"
      TargetType: "SSM_DOCUMENT"
      TargetVersion: "1"
      Parameters:
        AutomationAssumeRole:
          StaticValue:
            Values:
              - arn:aws:iam::341476298946:role/automationassumerole-us-west-1
        username:
          ResourceValue:
            Value: "RESOURCE_ID"
      ExecutionControls:
        SsmControls:
          ConcurrentExecutionRatePercentage: 10
          ErrorPercentage: 10
      Automatic: True
      MaximumAutomaticAttempts: 5
      RetryAttemptSeconds: 60
  
    
  IAMUserPolicyDetach:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: IAMUserPolicyDetach
      Description: >-
        PCI.IAM.2 – IAM users should not have IAM Policies attached. Ensure IAM policies are attached only to groups or roles
      Scope:
        ComplianceResourceTypes:
        - "AWS::IAM::User"
      Source:
        Owner: AWS
        SourceIdentifier: IAM_USER_NO_POLICIES_CHECK
  IAMUserPolicyDetachRemediation:
    DependsOn: IAMUserPolicyDetach
    Type: 'AWS::Config::RemediationConfiguration'
    Properties:
      ConfigRuleName: IAMUserPolicyDetach
      TargetId: "Custom-IAMUserPolicyDetachCF"
      TargetType: "SSM_DOCUMENT"
      TargetVersion: "1"
      Parameters:
        AutomationAssumeRole:
          StaticValue:
            Values:
              - arn:aws:iam::341476298946:role/automationassumerole-us-west-1
        username:
          ResourceValue:
            Value: "RESOURCE_ID"
      ExecutionControls:
        SsmControls:
          ConcurrentExecutionRatePercentage: 10
          ErrorPercentage: 10
      Automatic: True
      MaximumAutomaticAttempts: 10
      RetryAttemptSeconds: 600

  IAMFullAdminPolicyDetach:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: IAMFullAdminPolicyDetach
      Description: >-
        PCI.IAM.3 – Ensure IAM policies that allow full administrative privileges are not created
      Scope:
        ComplianceResourceTypes:
        - "AWS::IAM::User"
      Source:
        Owner: AWS
        SourceIdentifier: IAM_POLICY_NO_STATEMENTS_WITH_ADMIN_ACCESS
  IAMFullAdminPolicyDetachRemediation:
    DependsOn: IAMFullAdminPolicyDetach
    Type: 'AWS::Config::RemediationConfiguration'
    Properties:
      ConfigRuleName: IAMFullAdminPolicyDetach
      TargetId: "Custom-IAMFullAdminPolicyDetachCF"
      TargetType: "SSM_DOCUMENT"
      TargetVersion: "1"
      Parameters:
        AutomationAssumeRole:
          StaticValue:
            Values:
              - arn:aws:iam::341476298946:role/automationassumerole-us-west-1
        accountid:
          StaticValue:
            Values:
              - !Ref 'AWS::AccountId'
        policyresourceid:
          ResourceValue:
            Value: "RESOURCE_ID"
      ExecutionControls:
        SsmControls:
          ConcurrentExecutionRatePercentage: 10
          ErrorPercentage: 10
      Automatic: True
      MaximumAutomaticAttempts: 10
      RetryAttemptSeconds: 600

  CloudTrailLogFileValidationEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: cloud-trail-log-file-validation-enabled
      Description: >-
        PCI.CloudTrail.3 – Ensure CloudTrail log file validation is enabled
      Scope:
        ComplianceResourceTypes:
        - "AWS::CloudTrail::Trail"
      Source:
        Owner: AWS
        SourceIdentifier: CLOUD_TRAIL_LOG_FILE_VALIDATION_ENABLED
      MaximumExecutionFrequency: One_Hour
  CloudTrailLogFileValidationRemediation:
    DependsOn: CloudTrailLogFileValidationEnabled
    Type: 'AWS::Config::RemediationConfiguration'
    Properties:
      ConfigRuleName: cloud-trail-log-file-validation-enabled
      ResourceType: "AWS::CloudTrail::Trail"
      TargetId: "Custom-LogFileValidationCF"
      TargetType: "SSM_DOCUMENT"
      TargetVersion: "1"
      Parameters:
        AutomationAssumeRole:
          StaticValue:
            Values:
              - arn:aws:iam::341476298946:role/automationassumerole-us-west-1
        CloudTrailLogGroupArn:
          StaticValue:
            Values:
              - !ImportValue CloudTrailLogGroupArn
        CloudWatchRoleArn:
          StaticValue:
            Values:
              - !ImportValue CloudWatchRoleArn
        TrailName:
          ResourceValue:
            Value: "RESOURCE_ID"
      ExecutionControls:
        SsmControls:
          ConcurrentExecutionRatePercentage: 10
          ErrorPercentage: 10
      Automatic: True
      MaximumAutomaticAttempts: 5
      RetryAttemptSeconds: 60

  EBSPublicNonRestoreSnapshotEnabled:
    Type: "AWS::Config::ConfigRule"
    Properties:
      ConfigRuleName: EBSPublicNonRestoreSnapshotEnabled
      Description: "[PCI.EC2.1] Amazon EBS snapshots should not be publicly restorable"
      Source:
        Owner: AWS
        SourceIdentifier: EBS_SNAPSHOT_PUBLIC_RESTORABLE_CHECK
  EBSPublicNonRestoreSnapshotRemediation:
    DependsOn: EBSPublicNonRestoreSnapshotEnabled
    Type: 'AWS::Config::RemediationConfiguration'
    Properties:
      ConfigRuleName: EBSPublicNonRestoreSnapshotEnabled
      TargetId: "Custom-ModifySnapshot"
      TargetType: "SSM_DOCUMENT"
      TargetVersion: "1"
      Parameters:
        AutomationAssumeRole:
          StaticValue:
            Values:
              - arn:aws:iam::341476298946:role/automationassumerole-us-west-1
        snapshotId:
          ResourceValue:
            Value: "RESOURCE_ID"
      ExecutionControls:
        SsmControls:
          ConcurrentExecutionRatePercentage: 10
          ErrorPercentage: 10
      Automatic: True
      MaximumAutomaticAttempts: 5
      RetryAttemptSeconds: 60

  CloudTrailCloudWatchLogsEnabled:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: cloud_trail_cloud_watch_logs_enabled
      Description: >-
        PCI.CloudTrail.4 – Ensure CloudTrail trails are integrated with Amazon CloudWatch Logs
      Scope:
        ComplianceResourceTypes:
        - "AWS::CloudTrail::Trail"
      Source:
        Owner: AWS
        SourceIdentifier: CLOUD_TRAIL_CLOUD_WATCH_LOGS_ENABLED
      MaximumExecutionFrequency: One_Hour
  CloudTrailCloudWatchLogsRemediation:
    DependsOn: CloudTrailCloudWatchLogsEnabled
    Type: 'AWS::Config::RemediationConfiguration'
    Properties:
      ConfigRuleName: cloud_trail_cloud_watch_logs_enabled
      ResourceType: "AWS::CloudTrail::Trail"
      TargetId: "Custom-CloudTrailUpdateCF"
      TargetType: "SSM_DOCUMENT"
      TargetVersion: "1"
      Parameters:
        AutomationAssumeRole:
          StaticValue:
            Values:
              - arn:aws:iam::341476298946:role/automationassumerole-us-west-1
        CloudTrailLogGroupArn:
          StaticValue:
            Values:
              - !ImportValue CloudTrailLogGroupArn
        CloudWatchRoleArn:
          StaticValue:
            Values:
              - !ImportValue CloudWatchRoleArn
        TrailName:
          ResourceValue:
            Value: "RESOURCE_ID"
      ExecutionControls:
        SsmControls:
          ConcurrentExecutionRatePercentage: 10
          ErrorPercentage: 10
      Automatic: True
      MaximumAutomaticAttempts: 5
      RetryAttemptSeconds: 60

  S3ReplicationEnabled:
    Type: "AWS::Config::ConfigRule"
    Properties:
      ConfigRuleName: S3ReplicationEnabled
      Description: "[PCI.S3.3] S3 buckets should have cross-region replication enabled"
      Scope:
        ComplianceResourceTypes:
        - "AWS::S3::Bucket"
      Source:
        Owner: AWS
        SourceIdentifier: S3_BUCKET_REPLICATION_ENABLED
  S3ReplicationEnabledRemediation:
    DependsOn: S3ReplicationEnabled
    Type: 'AWS::Config::RemediationConfiguration'
    Properties:
      ConfigRuleName: S3ReplicationEnabled
      ResourceType: "AWS::S3::Bucket"
      TargetId: "Custom-EnableS3Replication"
      TargetType: "SSM_DOCUMENT"
      TargetVersion: "1"
      Parameters:
        AutomationAssumeRole:
          StaticValue:
            Values:
              - arn:aws:iam::341476298946:role/automationassumerole-us-west-1
        S3IAMReplicationRole:
          StaticValue:
            Values:
              - !ImportValue S3BucketReplicationRoleArn
        DestinationBucketName:
          StaticValue:
            Values:
              - !ImportValue S3ReplicationBucketFullName
        SourceBucketName:
          ResourceValue:
            Value: "RESOURCE_ID"
        SSEAlgorithm:
          StaticValue:
            Values:
              - "AES256"
      ExecutionControls:
        SsmControls:
          ConcurrentExecutionRatePercentage: 10
          ErrorPercentage: 10
      Automatic: True
      MaximumAutomaticAttempts: 5
      RetryAttemptSeconds: 60

  RestrictDefaultSecurityGroup:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: RestrictDefaultSecurityGroup
      Description: >-
        PCI.EC2.2 VPC default security group should prohibit inbound and outbound traffic
      Scope:
        ComplianceResourceTypes:
        - "AWS::EC2::SecurityGroup"
      Source:
        Owner: AWS
        SourceIdentifier: VPC_DEFAULT_SECURITY_GROUP_CLOSED
  RestrictDefaultSecurityGroupRemediation:
    DependsOn: RestrictDefaultSecurityGroup
    Type: 'AWS::Config::RemediationConfiguration'
    Properties:
      ConfigRuleName: RestrictDefaultSecurityGroup
      ResourceType: "AWS::EC2::SecurityGroup"
      TargetId: "Custom-RestrictSecurityGroup"
      TargetType: "SSM_DOCUMENT"
      TargetVersion: "1"
      Parameters:
        AutomationAssumeRole:
          StaticValue:
            Values:
              - arn:aws:iam::341476298946:role/automationassumerole-us-west-1
        IpAddressToBlock:
          StaticValue:
            Values:
              - '0.0.0.0/0'
        groupId:
          ResourceValue:
            Value: "RESOURCE_ID"
      ExecutionControls:
        SsmControls:
          ConcurrentExecutionRatePercentage: 10
          ErrorPercentage: 10
      Automatic: True
      MaximumAutomaticAttempts: 5
      RetryAttemptSeconds: 60

  S3BucketLoggingEnabled:
    Type: "AWS::Config::ConfigRule"
    Properties:
      ConfigRuleName: S3BucketLoggingEnabled
      Description: "Checks whether logging is enabled for your S3 buckets."
      Scope:
        ComplianceResourceTypes:
        - "AWS::S3::Bucket"
      Source:
        Owner: AWS
        SourceIdentifier: S3_BUCKET_LOGGING_ENABLED
  S3BucketLoggingEnabledRemediation:
    DependsOn: S3BucketLoggingEnabled
    Type: 'AWS::Config::RemediationConfiguration'
    Properties:
      ConfigRuleName: S3BucketLoggingEnabled
      ResourceType: "AWS::S3::Bucket"
      TargetId: "AWS-ConfigureS3BucketLogging"
      TargetType: "SSM_DOCUMENT"
      TargetVersion: "1"
      Parameters:
        AutomationAssumeRole:
          StaticValue:
            Values:
              - arn:aws:iam::341476298946:role/automationassumerole-us-west-1
        BucketName:
          ResourceValue:
            Value: "RESOURCE_ID"
        TargetBucket:
          StaticValue:
            Values:
              - Ref: S3TargetBucketNameForEnableLogging
        GrantedPermission:
          StaticValue:
            Values:
              - "FULL_CONTROL"
        GranteeType:
          StaticValue:
            Values:
              - "Group"
        GranteeUri:
          StaticValue:
            Values:
              - "http://acs.amazonaws.com/groups/s3/LogDelivery"
      ExecutionControls:
        SsmControls:
          ConcurrentExecutionRatePercentage: 10
          ErrorPercentage: 10
      Automatic: True
      MaximumAutomaticAttempts: 10
      RetryAttemptSeconds: 600